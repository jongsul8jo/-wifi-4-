#include <WiFiNINA.h>

// WiFi 연결 정보
const char* ssid = ""; // WiFi SSID
const char* password = ""; // WiFi 비밀번호
const char* server = ""; // 서버 IP 주소
const int port = 8080; // 서버 포트

const int mq7Pin0 = A0; // MQ-7 센서가 A0 핀에 연결됨
const int mq7Pin1 = A1;
const int mq7Pin2 = A2;
const int mq7Pin3 = A3;

unsigned long previousMillis = 0;
const unsigned long interval = 10000; // 10초

WiFiClient client;

void setup() {
  Serial.begin(9600);

  // WiFi 모듈이 존재하는지 확인
  if (WiFi.status() == WL_NO_MODULE) {
    Serial.println("WiFi 모듈이 없습니다");
    while (true);
  }

  // WiFi 연결 초기화
  while (WiFi.begin(ssid, password) != WL_CONNECTED) {
    delay(1000);
    Serial.println("WiFi에 연결 중...");
  }
  Serial.println("WiFi에 연결되었습니다");

  // 센서 핀 모드 설정
  pinMode(mq7Pin0, INPUT);
  pinMode(mq7Pin1, INPUT);
  pinMode(mq7Pin2, INPUT);
  pinMode(mq7Pin3, INPUT);
}

void loop() {
  unsigned long currentMillis = millis();

  // 10초마다 데이터 수집
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;

    short mq7Value0 = analogRead(mq7Pin0);
    short mq7Value1 = analogRead(mq7Pin1);
    short mq7Value2 = analogRead(mq7Pin2);
    short mq7Value3 = analogRead(mq7Pin3); // MQ-7 센서 데이터 읽기
    Serial.print("MQ-7 센서 값: ");
    Serial.println(mq7Value0);
    Serial.println(mq7Value1);
    Serial.println(mq7Value2);
    Serial.println(mq7Value3);

    // 서버에 연결
    if (client.connect(server, port)) {
      Serial.println("서버에 연결되었습니다");

      // 전송할 데이터 준비
      String data = "GET /update?value0=" + String(mq7Value0) + "&value1=" + String(mq7Value1) + "&value2=" + String(mq7Value2) + "&value3=" + String(mq7Value3) + " HTTP/1.1\r\nHost: " + String(server) + "\r\nConnection: close\r\n\r\n";
      
      // 데이터 전송
      client.print(data);
      Serial.println("서버로 데이터 전송됨");

      // 서버 응답 대기
      while (client.connected()) {
        if (client.available()) {
          String line = client.readStringUntil('\r');
          Serial.print(line);
        }
      }

      // 연결 종료
      client.stop();
      Serial.println("서버와의 연결이 끊어졌습니다");
    } else {
      Serial.println("서버에 연결할 수 없습니다");
    }
  }
}
